//vertex array
vert array

//create vao and vbo
gluint vao;
glGenVertexArray;

gluint vbo;
glGenbuffers

//load array to vbo
glBindBuffer(GL_ARRAY_BUFFER, vbo);
glBufferData(GL_ARRAY_BUFFER, sizeof(array), array, GL_STATIC_DRAW);

//create shaders
gluint VS, FS, GS, SP;
createShaderProgram;

//bind vao, vbo and sp
glBindVertexArray(vao);
glBindBuffer(GL_ARRAY_BUFFER, vbo);
specifySceneVertexAttributes(SP);

//create textures 
gluint tex;

//create uniforms
glUseProgram(SP);
glUniform1i(glGetUniformLocation(SP, "texName"), 0);

GLint uniModel = glGetUniformLocation(sceneShaderProgram, "model");

GLint uniView = glGetUniformLocation(sceneShaderProgram, "view");
glUniformMatrix4fv(uniView, 1, GL_FALSE, glm::value_ptr(view));

glm::mat4 proj = glm::perspective(glm::radians(45.0f), 800.0f / 600.0f, 1.0f, 10.0f);
GLint uniProj = glGetUniformLocation(sceneShaderProgram, "proj");
glUniformMatrix4fv(uniProj, 1, GL_FALSE, glm::value_ptr(proj));

GLint uniColor = glGetUniformLocation(sceneShaderProgram, "overrideColor");


